version: "3.8"

services:
  # Interactive Brokers Gateway
  ib-gateway:
    image: ghcr.io/extrange/ibkr:latest
    container_name: lotto-grid-ib-gateway
    environment:
      TWSUSERID: "${IB_USERNAME}"
      TWSPASSWORD: "${IB_PASSWORD}"
      TRADING_MODE: "${TRADE_MODE:-paper}"
      VNC_SERVER_PASSWORD: "ibgateway"
    ports:
      - "7497:7497" # IB API port (paper)
      - "7496:7496" # IB API port (live)
      - "5900:5900" # VNC port for remote desktop access
    volumes:
      - ib_settings:/root/Jts
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "netstat", "-an", "|", "grep", "7497"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Trading Bot Engine
  bot-engine:
    build:
      context: .
      target: production
    container_name: lotto-grid-bot-engine
    environment:
      - IB_GATEWAY_HOST=ib-gateway
      - IB_GATEWAY_PORT=7497
      - DATABASE_URL=sqlite:///./data/lotto_grid.db
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      ib-gateway:
        condition: service_healthy
    restart: unless-stopped
    command: ["poetry", "run", "python", "-m", "app.bot"]
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import sqlite3; sqlite3.connect('/app/data/lotto_grid.db').execute('SELECT 1')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Streamlit UI Dashboard
  streamlit-ui:
    build:
      context: .
      target: production
    container_name: lotto-grid-ui
    environment:
      - DATABASE_URL=sqlite:///./data/lotto_grid.db
    env_file:
      - .env
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data:ro # Read-only access to data
      - ./logs:/app/logs:ro # Read-only access to logs
    depends_on:
      - bot-engine
    restart: unless-stopped
    command:
      [
        "poetry",
        "run",
        "streamlit",
        "run",
        "app/ui.py",
        "--server.port=8501",
        "--server.address=0.0.0.0",
      ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: PostgreSQL for production (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: lotto-grid-postgres
  #   environment:
  #     POSTGRES_DB: lotto_grid
  #     POSTGRES_USER: lotto_grid
  #     POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: lotto-grid-redis
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped

volumes:
  ib_settings:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  default:
    name: lotto-grid-network
