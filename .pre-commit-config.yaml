# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-merge-conflict

  # Python code formatting (matches CI exactly)
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        language_version: python3.11
        args: ['--check', '.']

  # Import sorting (matches CI exactly)
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--check-only', '.']

  # Linting (matches CI exactly)
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['.']

  # Type checking (matches CI exactly)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: ['app/']
        additional_dependencies: ['types-requests', 'types-PyYAML', 'types-pytz', 'sqlalchemy[mypy]']
        files: ^app/
        pass_filenames: false

  # Security checks (matches CI exactly)
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-r', 'app/', '-f', 'json', '-o', 'bandit-report.json', '--exit-zero']
        files: ^app/
        pass_filenames: false

  # Tests (matches CI exactly) - run LAST
  - repo: local
    hooks:
      - id: pytest-check
        name: Run pytest
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: ['tests/', '-v', '--cov=app', '--cov-config=.coveragerc', '--cov-report=xml', '--cov-report=term-missing', '--cov-fail-under=80', '--ignore=tests/uat/']

# Configuration
default_language_version:
  python: python3.11

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [pytest-check]  # Skip tests in CI to avoid double-running
