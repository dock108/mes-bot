# To get started with Dependabot version updates, you'll need to specify which
# package ecosystems to update and where the package manifests are located.
# Please see the documentation for all configuration options:
# https://docs.github.com/github/administering-a-repository/configuration-options-for-dependency-updates

version: 2
updates:
  # Python dependencies
  - package-ecosystem: "pip"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "04:00"
    open-pull-requests-limit: 10
    reviewers:
      - "your-github-username"  # Replace with actual username
    assignees:
      - "your-github-username"  # Replace with actual username
    labels:
      - "dependencies"
      - "python"
    groups:
      # Group all patch updates together
      patch-updates:
        patterns:
          - "*"
        update-types:
          - "patch"
      # Group all minor updates together
      minor-updates:
        patterns:
          - "*"
        update-types:
          - "minor"
    # Allow both direct and indirect (transitive) dependency updates
    allow:
      - dependency-type: "all"
    # Automatically merge patch updates for dev dependencies
    versioning-strategy: "increase"
    commit-message:
      prefix: "chore"
      prefix-development: "chore"
      include: "scope"
    ignore:
      # Don't update these packages automatically
      - dependency-name: "sqlalchemy"
        versions: ["2.1.x", "2.2.x"]  # Stay on 2.0.x for now
      - dependency-name: "streamlit"
        versions: ["1.29.x", "1.30.x"]  # Test major updates manually

  # GitHub Actions
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "04:00"
    open-pull-requests-limit: 5
    reviewers:
      - "your-github-username"  # Replace with actual username
    labels:
      - "dependencies"
      - "github-actions"
    commit-message:
      prefix: "ci"
      include: "scope"

  # Docker dependencies (if using Docker)
  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "04:00"
    open-pull-requests-limit: 5
    reviewers:
      - "your-github-username"  # Replace with actual username
    labels:
      - "dependencies"
      - "docker"
    commit-message:
      prefix: "build"
      include: "scope"
    ignore:
      # Ignore updates to Python base image (handle manually)
      - dependency-name: "python"
        versions: ["3.12.x"]  # Stay on 3.11 for now

# Security updates are automatically created for vulnerable dependencies
# and bypass the schedule, limits, and ignore settings above