name: UAT Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  uat-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.10, 3.11]
        browser: [chromium, firefox]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Install Playwright browsers
      run: |
        poetry run playwright install ${{ matrix.browser }}
        poetry run playwright install-deps
    
    - name: Create test database
      run: |
        poetry run python -c "
        from app.models import create_database
        create_database('sqlite:///test_uat.db')
        "
    
    - name: Run smoke tests
      env:
        BROWSER: ${{ matrix.browser }}
        HEADLESS: true
        DATABASE_URL: sqlite:///test_uat.db
        TRADE_MODE: paper
      run: |
        poetry run pytest tests/uat/ \
          --browser ${{ matrix.browser }} \
          --headless \
          --screenshot only-on-failure \
          --video retain-on-failure \
          --output test-results \
          -m "not slow" \
          --maxfail=3 \
          -v
    
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: uat-test-results-${{ matrix.python-version }}-${{ matrix.browser }}
        path: |
          test-results/
          screenshots/
        retention-days: 7
    
    - name: Upload coverage reports
      if: matrix.python-version == '3.11' && matrix.browser == 'chromium'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  uat-full-suite:
    runs-on: ubuntu-latest
    needs: uat-tests
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Install Playwright browsers
      run: |
        poetry run playwright install chromium
        poetry run playwright install-deps
    
    - name: Run full UAT suite
      env:
        HEADLESS: true
        DATABASE_URL: sqlite:///test_uat_full.db
        TRADE_MODE: paper
      run: |
        poetry run python -c "
        from app.models import create_database
        create_database('sqlite:///test_uat_full.db')
        "
        
        poetry run pytest tests/uat/ \
          --browser chromium \
          --headless \
          --screenshot only-on-failure \
          --video retain-on-failure \
          --output test-results-full \
          --maxfail=10 \
          -v
    
    - name: Upload full test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: uat-full-test-results
        path: |
          test-results-full/
          screenshots/
        retention-days: 14

  performance-uat:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Install Playwright browsers
      run: |
        poetry run playwright install chromium
        poetry run playwright install-deps
    
    - name: Run performance-focused UAT
      env:
        HEADLESS: true
        DATABASE_URL: sqlite:///test_perf.db
        TRADE_MODE: paper
      run: |
        poetry run python -c "
        from app.models import create_database
        create_database('sqlite:///test_perf.db')
        "
        
        # Run tests that focus on performance and responsiveness
        poetry run pytest tests/uat/test_dashboard_ui.py::TestDashboardUI::test_responsive_layout \
                          tests/uat/test_live_monitor.py::TestLiveMonitoring::test_live_data_refresh_cycle \
                          tests/uat/test_performance.py::TestPerformanceAnalytics::test_performance_charts_display \
          --browser chromium \
          --headless \
          --screenshot only-on-failure \
          -v
    
    - name: Performance test summary
      if: always()
      run: |
        echo "## UAT Performance Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Performance-focused UAT tests completed for PR validation" >> $GITHUB_STEP_SUMMARY